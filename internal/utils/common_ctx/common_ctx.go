package common_ctx

import (
	"context"
	"net/http"
)

type (
	CommonCtxKeyType string

	User struct {
		ID        int64  `json:"id"`         // fetch from DB
		VisitorId string `json:"visitor_id"` // automatically generated by front end
		Guid      string `json:"guid"`       // email sha generated from front end
		Email     string `json:"email"`      //
	}

	CommonCtx struct {
		User User
	}
)

var (
	CommonCtxKey = CommonCtxKeyType("common_ctx")
)

func Get(r *http.Request) CommonCtx {
	return GetFromCtx(r.Context())
}

func GetFromCtx(ctx context.Context) CommonCtx {
	commonCtx := CommonCtx{
		User: User{},
	}

	v := ctx.Value(CommonCtxKey)

	if v == nil {
		return commonCtx
	}

	commonCtx, ok := v.(CommonCtx)

	if !ok {
		return commonCtx
	}

	return commonCtx
}

func FromRequestHeader(r *http.Request) CommonCtx {
	return CommonCtx{
		User: User{
			VisitorId: r.Header.Get("X-Visitor-Id"),
			Guid:      r.Header.Get("Animapu-User-Uid"),
			Email:     r.Header.Get("Animapu-User-Email"),
		},
	}
}
